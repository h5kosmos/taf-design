plugins {
    id 'java'
    id "io.freefair.lombok" version "6.5.1"
    id "org.sonarqube" version "3.4.0.2513"
    id "io.freefair.aspectj" version "6.5.1"
}

group 'com.taf'
version '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    defaultEncoding = 'UTF-8'
    javaVersion = '17'
    log4jVersion = '2.19.0'
    reportPortalAgentVersion = '5.1.3'
    reportPortalLoggerVersion = '5.1.5'
    springBootVersion = '2.7.4'
    selenideVersion = '6.8.1'
    slf4jSimple = '2.0.1'
    junitVersion = '5.8.1';
    junitSuitesVersion = '1.8.1'
    cucumberVersion = '6.8.0'
}

compileJava {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    options.encoding = defaultEncoding
}

dependencies {
    implementation fileTree(dir: 'libs', includes: ['JavaUnitTesting.jar'])
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    implementation group: 'com.epam.reportportal', name: 'logger-java-log4j', version: reportPortalLoggerVersion
    implementation group: 'com.epam.reportportal', name: 'agent-java-junit5', version: reportPortalLoggerVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter', version: springBootVersion
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    implementation group: 'com.codeborne', name: 'selenide', version: selenideVersion
    implementation group: 'com.codeborne', name: 'selenide-testng', version: selenideVersion
    implementation group: 'org.slf4j', name: 'slf4j-simple', version: slf4jSimple
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    implementation group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion
    implementation group: 'org.junit.platform', name: 'junit-platform-suite-engine', version: junitSuitesVersion
    implementation group: 'io.cucumber', name: 'cucumber-java', version: cucumberVersion
    implementation group: 'io.cucumber', name: 'cucumber-junit', version: cucumberVersion
    implementation group: 'io.cucumber', name: 'cucumber-spring', version: cucumberVersion
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}
def availableThreadCount = Runtime.runtime.availableProcessors().intdiv(2,10) ?: 5

def cucumberThreadsOption = ['--threads', availableThreadCount]

def cucumberOptions = [
        '--plugin', 'pretty',
        '--plugin', 'html:target/cucumber-report.html',
        '--glue', 'com.taf.steps',
        '--glue', 'com.taf.configurations',
        'src/test/resources']

task cucumberCli {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            systemProperties(System.getProperties())
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            cucumberOptions.addAll(cucumberThreadsOption)
            args = cucumberOptions
        }
    }
}

test {
    doFirst {
        systemProperties System.getProperties()
    }
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    systemProperty 'junit.jupiter.extensions.autodetection.enabled', true
}